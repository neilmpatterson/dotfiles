#!/bin/zsh

# Directory containing markdown files
VAULT_DIR="/Users/neil.patterson/library/Mobile Documents/iCloud~md~obsidian/Documents/Work"
SOURCE_DIR="zettelkasten"
DEST_DIR="notes"
DEST_HUB="hubs"

# Iterate through all markdown files in the source directory
find "$VAULT_DIR/$SOURCE_DIR" -type f -name "*.md" | while read -r file; do
	echo "Processing $file"

	# Extract the hub from the file. This assumes the hub is on the line immediately following "hubs:"
	hub=$(awk '/hubs:/{getline; print; exit}' "$file" | sed -e 's/^ *- *//' -e 's/^ *//;s/ *$//' | sed 's/"\[\[\(.*\)]]"/\1/')

	# If a hub is found, proceed with adding backlink to map-of-content
	if [ ! -z "$hub" ]; then
		echo "Found hub $hub"

		# Create the target file if it doesn't exist
		TARGET_FILE="$VAULT_DIR/$DEST_HUB/$hub.md"
		if [ -s $TARGET_FILE ]; then
			# The file is not-empty.
			touch "$TARGET_FILE"
		else
			# The file is empty.
			touch "$TARGET_FILE"
			echo "# $hub\n" >>$TARGET_FILE
		fi
		# Append the back-link to the Map-of-Content
		echo "- \"[[$(basename $file)]]\"" >>$TARGET_FILE

		echo "Added or Updated hub to $TARGET_FILE"
	else
		echo "No hub found for $file"
	fi

	# Extract the tag from the file. This assumes the tag is on the line immediately following "tags:"
	tag=$(awk '/tags:/{getline; print; exit}' "$file" | sed -e 's/^ *- *//' -e 's/^ *//;s/ *$//')

	# If a tag is found, proceed with moving the file
	if [ ! -z "$tag" ]; then
		echo "Found tag $tag"

		# Create the target directory if it doesn't exist
		TARGET_DIR="$VAULT_DIR/$DEST_DIR/$tag"
		mkdir -p "$TARGET_DIR"

		# Move the file to the target directory
		mv "$file" "$TARGET_DIR/"
		echo "Moved $file to $TARGET_DIR"
	else
		echo "No tag found for $file"
	fi

done

echo "Done ðŸª·"
